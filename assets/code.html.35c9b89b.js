import{_ as a,d as n}from"./app.3bb594d2.js";const s={},e=n(`<h1 id="\u624B\u5199\u9898" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199\u9898" aria-hidden="true">#</a> \u624B\u5199\u9898</h1><h2 id="_1-foreach" tabindex="-1"><a class="header-anchor" href="#_1-foreach" aria-hidden="true">#</a> 1. forEach</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forEach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_2-map" tabindex="-1"><a class="header-anchor" href="#_2-map" aria-hidden="true">#</a> 2. map</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">map</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_3-filter" tabindex="-1"><a class="header-anchor" href="#_3-filter" aria-hidden="true">#</a> 3. filter</h2><h2 id="_4-some" tabindex="-1"><a class="header-anchor" href="#_4-some" aria-hidden="true">#</a> 4. some</h2><h2 id="_5-every" tabindex="-1"><a class="header-anchor" href="#_5-every" aria-hidden="true">#</a> 5. every</h2><h2 id="_6-find" tabindex="-1"><a class="header-anchor" href="#_6-find" aria-hidden="true">#</a> 6. find</h2><h2 id="_7-findindex" tabindex="-1"><a class="header-anchor" href="#_7-findindex" aria-hidden="true">#</a> 7. findIndex</h2><h2 id="_8-fill" tabindex="-1"><a class="header-anchor" href="#_8-fill" aria-hidden="true">#</a> 8. fill</h2><h2 id="_9-reduce" tabindex="-1"><a class="header-anchor" href="#_9-reduce" aria-hidden="true">#</a> 9. reduce</h2><h2 id="_10-flat" tabindex="-1"><a class="header-anchor" href="#_10-flat" aria-hidden="true">#</a> 10. flat</h2><h2 id="_11-instanceof" tabindex="-1"><a class="header-anchor" href="#_11-instanceof" aria-hidden="true">#</a> 11. instanceOf</h2><h2 id="_12-object-is" tabindex="-1"><a class="header-anchor" href="#_12-object-is" aria-hidden="true">#</a> 12. Object.is()</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">is</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj1<span class="token punctuation">,</span> obj2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406NaN\u7684\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj1 <span class="token operator">!==</span> obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj1 <span class="token operator">+</span> <span class="token string">&#39;&#39;</span> <span class="token operator">===</span> obj2 <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5904\u7406+0 \u548C -0\u7684\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj1 <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj1 <span class="token operator">/</span> <span class="token number">1</span> <span class="token operator">===</span> obj1 <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> obj1 <span class="token operator">===</span> obj2<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_13-call" tabindex="-1"><a class="header-anchor" href="#_13-call" aria-hidden="true">#</a> 13. call</h2><h2 id="_14-apply" tabindex="-1"><a class="header-anchor" href="#_14-apply" aria-hidden="true">#</a> 14. apply</h2><h2 id="_15-bind" tabindex="-1"><a class="header-anchor" href="#_15-bind" aria-hidden="true">#</a> 15. bind</h2><h2 id="_16-promise" tabindex="-1"><a class="header-anchor" href="#_16-promise" aria-hidden="true">#</a> 16. Promise</h2><h2 id="_17-async-await" tabindex="-1"><a class="header-anchor" href="#_17-async-await" aria-hidden="true">#</a> 17. async...await</h2><h2 id="_18-promise-all" tabindex="-1"><a class="header-anchor" href="#_18-promise-all" aria-hidden="true">#</a> 18. Promise.all</h2><h2 id="_19-promise-race" tabindex="-1"><a class="header-anchor" href="#_19-promise-race" aria-hidden="true">#</a> 19. Promise.race</h2><h2 id="_20-new" tabindex="-1"><a class="header-anchor" href="#_20-new" aria-hidden="true">#</a> 20. new</h2><h2 id="_21-promise-allsettled" tabindex="-1"><a class="header-anchor" href="#_21-promise-allsettled" aria-hidden="true">#</a> 21. Promise.allSettled</h2><h2 id="_22-promise-any" tabindex="-1"><a class="header-anchor" href="#_22-promise-any" aria-hidden="true">#</a> 22. Promise.any</h2>`,26);function p(t,o){return e}var r=a(s,[["render",p],["__file","code.html.vue"]]);export{r as default};
